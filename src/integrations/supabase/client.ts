
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://buaoasayrplrordqngrg.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ1YW9hc2F5cnBscm9yZHFuZ3JnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDUyNTA0MDksImV4cCI6MjA2MDgyNjQwOX0.Ieu07_2Y-YZBHDDXxsesGt8uYvglji3Lu4b67whoOOg";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Add a helper function to check if user is logged in
export const getCurrentUser = async () => {
  const { data: { session } } = await supabase.auth.getSession();
  return session?.user || null;
};

// Helper for test user authentication
export const signInWithTestCredentials = async (email: string, password: string) => {
  // Check if it's our test user
  if (email === "obaida@wallet.com" && password === "2002") {
    // First try to sign up this test user if it doesn't exist yet
    const { error: signUpError } = await supabase.auth.signUp({
      email,
      password,
    });

    // Now try to sign in
    return supabase.auth.signInWithPassword({
      email,
      password,
    });
  }
  
  // For all other users, use regular sign in
  return supabase.auth.signInWithPassword({
    email,
    password,
  });
};
